typedef struct{//???R?s?[?\????
	char track1;//???ÃÉg???b?N??
	long x1_1;//????????
	long x1_2;// <<error>>
	char track2;//???ÃÉg???b?N??
	long x2;//??????
	long num;//????
}NOTECOPY;

typedef struct{//???g?????X?|?[?g?????|?b?g
	char track;//???ÃÉg???b?N??
	long x1;//????????
	long x2;// <<error>>
	unsigned char a;//???ÍÇæ?? 
	unsigned char mode;// <<error>>
}PARCHANGE;

//???????X?g?\????
typedef struct NOTELIST{
	NOTELIST *from;//?O?ÃÉA?h???X
	NOTELIST *to;//???ÃÉA?h???X
	long x;//? íu
	unsigned char length;// <<error>>
	unsigned char y;// <<error>>
	unsigned char volume;//???H?????[??
	unsigned char pan;//?p??
}NOTELIST;
//?g???b?N?f?[?^???W
typedef struct{
	unsigned short freq;//+?????g??(1000??Default)
//	unsigned short note_num;// <<error>>
	unsigned char wave_no;//?g?`No
	char pipi;
	NOTELIST *note_p;//NoteData <<error>>
	NOTELIST *note_list;// <<error>>
}TRACKDATA;
//?»íP? Ç≈é??¬å≈óL?Ãè?
typedef struct MUSICINFO{
	unsigned short wait;
	unsigned char line;//?P???ﬂÇÃÉ??C????
	unsigned char dot;//?Íîë?ÃÉh?b?g??
	unsigned short alloc_note;//?m?€Ç????????Ãê?
	long repeat_x;//???s?[?g
	long end_x;//?»ÇÃèI??(???s?[?g?…ñﬂÇ?
	TRACKDATA tdata[16];
}MUSICINFO;
//???C???N???X?B???ÃÉA?v???P?[?V?????Ãí??S?B?i?N???X???ƒÇ?????ﬂÇƒég???j
typedef struct OrgData{
	OrgData();//?R???X?g???N?^
	~OrgData();//?f?X?g???N?^
	private:
		MUSICINFO info;
	public:
		//unsigned char *noteon;
		BOOL SetNote_afterSetLength(long x);
		BOOL SetNote_onlyLength(long x, long Length);

		void RedrawSelectArea(void);
		//?A???h?D?p
		int ReplaceFromRedoData();
		int ReplaceFromUndoData();
		void ClearUndoData();
		int SetUndoData();
		int ResetLastUndo(void); //?≈å??A???h?D?ÕÇ»Ç????????∆Ç…ÅI?i?????b?N???????∆Ç??j
		MUSICINFO ud_tdata[32]; //?∆ÇËÇ†?????A?A???h?D??2??
		NOTELIST  ud_note[32][16][4096];
		bool UndoEnable;
		bool RedoEnable;
		int CurrentUndoCursor; //???Ãî‘ç??…è???????
		int MinimumUndoCursor; //???Ãî‘ç??‹Ç≈Ç»ÇÁÇ≥???ÃÇ⁄Ç?
		int MaximumUndoCursor; //???Ãî‘ç??‹Ç≈Ç»Ç??Ëíº???????h?D?¬î\?j

		char track;
		char mute[MAXTRACK];
		unsigned char def_pan[MAXTRACK];
		unsigned char def_volume[MAXTRACK];
		void InitOrgData(void);
		void GetMusicInfo(MUSICINFO *mi);//?»è???Êìæ
		//?»è?????flag?Õê›í??C?e????w??
		BOOL SetMusicInfo(MUSICINFO *mi,unsigned long flag);
		BOOL NoteAlloc(unsigned short note_num);//?w????????NoteData?ÃóÃà??m??
		void ReleaseNote(void);//NoteData??J??
		NOTELIST *SearchNote(NOTELIST *np);//???g?pNOTE?Ãå???
		void OrgData::TouchKeyboard(unsigned char y);//???’Ç…êG??
		BOOL SetNote(long x,unsigned char y, int DragMode = 0);//???????u
		BOOL CutNote(long x,unsigned char y);//?????ÃÉJ?b?g
		BOOL SetPan(long x,unsigned char y);//?p?????????u
		BOOL SetPan2(long x,unsigned char y);//?p?????????uÍ≥†ÏñëÏù¥Í≥†ÏñëÏù¥Í≥†ÏñëÏù¥Í≥†ÏñëÏù¥Í≥†ÏñëÏù¥Í≥†ÏñëÏù¥
		BOOL CutPan(long x,unsigned char y);//?p???????ÃÉJ?b?g
		BOOL SetVolume(long x,unsigned char y);//?{?????[?????????u
		BOOL SetVolume2(long x,unsigned char y,long fade); //?t?F?[?h?A?E?g	// 2010.08.17 A
		BOOL CutVolume(long x,unsigned char y);//?{?????[???????ÃÉJ?b?g
		BOOL EnlargeAllNotes(int Power);//[?V]??????ower?{?…à????L?ŒÇ?
		BOOL ShortenAllNotes(int Power);//[?V]??????/Power?{?…èk???ﬂÇ?

		void SortNotes(void);	//?????Ãê???
		int SearchNote(long x,unsigned char y, int YuusenTrack);//?«ÇÃÉg???b?N?…Ç??Èâπ?????H?Ãå???
		int SearchNoteB(long x,unsigned char y, long *lStartx, long *lLastx, int YuusenTrack);//?«ÇÃÉg???b?N?…Ç??Èâπ?????H?Ãå??? 2014.05.02
		int SearchNoteC(long x,unsigned char y, long xWidth, long xMod);//?k???\?????Ãå????B
		

		void GetNoteUsed(long *use,long *left,char track);//?????c? ì?
		//?»â??Õï\??
		void PutNotes(int TPCY=0);
		void PutNotes2(int TPCY=0);
		void PutMusic(void);
		void PutNumber(void);
		void PutRepeat(void);
		bool PutBackGround(void);	//?w?i??ƒï`??
		void PutSelectArea(void);
		//?»â??Õçƒê?
		void PlayData(void);
		void SetPlayPointer(long x);//?ƒê??|?C???^?[??w??? íu?…ê›í?
		//?»â??ÕÉt?@?C???÷åW
		unsigned short GetNoteNumber(char track,NOTECOPY *nc);
		BOOL OrgData::SaveMusicData(void);
		BOOL OrgData::LoadMusicData(void);
		int FileCheckBeforeLoad(char *checkfile); //?t?@?C???????[?h?¬î\?≈Ç???0?Ÿè?????1?????B??????[?h?ÕÇ??????B 2014.05.22
		//?»â??Õï“èW?÷åW
		BOOL DelateNoteData(PARCHANGE *pc);
		BOOL CopyNoteData(NOTECOPY *nc);
		BOOL ChangePanData(PARCHANGE *pc);
		BOOL ChangeTransData(PARCHANGE *pc);
		BOOL ChangeVolumeData(PARCHANGE *pc);
		BOOL CheckNoteTail(char track);

		BOOL EnsureEmptyArea(PARCHANGE *pc, int Function); //[?V]?ÛîíÇñÑÇﬂÇ?2014.05.01
		BOOL SwapTrack(NOTECOPY *pc); //[?V]?g???b?N????????2014.05.10
		BOOL ExportMIDIData(char *strMidiFileName, int iRepeat); //MIDI???????J??????2014.05.11



	bool CopyNoteDataToCB(NOTECOPY *nc, int iTrack, int iFullTrack);
}ORGDATA;
extern ORGDATA org_data;